// Code generated by protoc-gen-go. DO NOT EDIT.
// source: logic.int.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ConnSignInReq struct {
	Body                 []byte   `protobuf:"bytes,1,opt,name=Body,proto3" json:"Body,omitempty"`
	ConnAddr             string   `protobuf:"bytes,2,opt,name=conn_addr,json=connAddr,proto3" json:"conn_addr,omitempty"`
	ClientAddr           string   `protobuf:"bytes,3,opt,name=client_addr,json=clientAddr,proto3" json:"client_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnSignInReq) Reset()         { *m = ConnSignInReq{} }
func (m *ConnSignInReq) String() string { return proto.CompactTextString(m) }
func (*ConnSignInReq) ProtoMessage()    {}
func (*ConnSignInReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{0}
}

func (m *ConnSignInReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnSignInReq.Unmarshal(m, b)
}
func (m *ConnSignInReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnSignInReq.Marshal(b, m, deterministic)
}
func (m *ConnSignInReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnSignInReq.Merge(m, src)
}
func (m *ConnSignInReq) XXX_Size() int {
	return xxx_messageInfo_ConnSignInReq.Size(m)
}
func (m *ConnSignInReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnSignInReq.DiscardUnknown(m)
}

var xxx_messageInfo_ConnSignInReq proto.InternalMessageInfo

func (m *ConnSignInReq) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *ConnSignInReq) GetConnAddr() string {
	if m != nil {
		return m.ConnAddr
	}
	return ""
}

func (m *ConnSignInReq) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

type ConnSignInResp struct {
	DeviceId             int64    `protobuf:"varint,1,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	UserId               int64    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnSignInResp) Reset()         { *m = ConnSignInResp{} }
func (m *ConnSignInResp) String() string { return proto.CompactTextString(m) }
func (*ConnSignInResp) ProtoMessage()    {}
func (*ConnSignInResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{1}
}

func (m *ConnSignInResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnSignInResp.Unmarshal(m, b)
}
func (m *ConnSignInResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnSignInResp.Marshal(b, m, deterministic)
}
func (m *ConnSignInResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnSignInResp.Merge(m, src)
}
func (m *ConnSignInResp) XXX_Size() int {
	return xxx_messageInfo_ConnSignInResp.Size(m)
}
func (m *ConnSignInResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnSignInResp.DiscardUnknown(m)
}

var xxx_messageInfo_ConnSignInResp proto.InternalMessageInfo

func (m *ConnSignInResp) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *ConnSignInResp) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type MessageACKReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             int64    `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	DeviceAck            int64    `protobuf:"varint,3,opt,name=device_ack,json=deviceAck,proto3" json:"device_ack,omitempty"`
	ReceiveTime          int64    `protobuf:"varint,4,opt,name=receive_time,json=receiveTime,proto3" json:"receive_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageACKReq) Reset()         { *m = MessageACKReq{} }
func (m *MessageACKReq) String() string { return proto.CompactTextString(m) }
func (*MessageACKReq) ProtoMessage()    {}
func (*MessageACKReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{2}
}

func (m *MessageACKReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageACKReq.Unmarshal(m, b)
}
func (m *MessageACKReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageACKReq.Marshal(b, m, deterministic)
}
func (m *MessageACKReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageACKReq.Merge(m, src)
}
func (m *MessageACKReq) XXX_Size() int {
	return xxx_messageInfo_MessageACKReq.Size(m)
}
func (m *MessageACKReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageACKReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageACKReq proto.InternalMessageInfo

func (m *MessageACKReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *MessageACKReq) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *MessageACKReq) GetDeviceAck() int64 {
	if m != nil {
		return m.DeviceAck
	}
	return 0
}

func (m *MessageACKReq) GetReceiveTime() int64 {
	if m != nil {
		return m.ReceiveTime
	}
	return 0
}

type MessageACKResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageACKResp) Reset()         { *m = MessageACKResp{} }
func (m *MessageACKResp) String() string { return proto.CompactTextString(m) }
func (*MessageACKResp) ProtoMessage()    {}
func (*MessageACKResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{3}
}

func (m *MessageACKResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageACKResp.Unmarshal(m, b)
}
func (m *MessageACKResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageACKResp.Marshal(b, m, deterministic)
}
func (m *MessageACKResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageACKResp.Merge(m, src)
}
func (m *MessageACKResp) XXX_Size() int {
	return xxx_messageInfo_MessageACKResp.Size(m)
}
func (m *MessageACKResp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageACKResp.DiscardUnknown(m)
}

var xxx_messageInfo_MessageACKResp proto.InternalMessageInfo

type SyncReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             int64    `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Seq                  int64    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncReq) Reset()         { *m = SyncReq{} }
func (m *SyncReq) String() string { return proto.CompactTextString(m) }
func (*SyncReq) ProtoMessage()    {}
func (*SyncReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{4}
}

func (m *SyncReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncReq.Unmarshal(m, b)
}
func (m *SyncReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncReq.Marshal(b, m, deterministic)
}
func (m *SyncReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncReq.Merge(m, src)
}
func (m *SyncReq) XXX_Size() int {
	return xxx_messageInfo_SyncReq.Size(m)
}
func (m *SyncReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncReq.DiscardUnknown(m)
}

var xxx_messageInfo_SyncReq proto.InternalMessageInfo

func (m *SyncReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *SyncReq) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *SyncReq) GetSeq() int64 {
	if m != nil {
		return m.Seq
	}
	return 0
}

type SyncResp struct {
	Messages             []byte   `protobuf:"bytes,1,opt,name=messages,proto3" json:"messages,omitempty"`
	HasMore              bool     `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncResp) Reset()         { *m = SyncResp{} }
func (m *SyncResp) String() string { return proto.CompactTextString(m) }
func (*SyncResp) ProtoMessage()    {}
func (*SyncResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{5}
}

func (m *SyncResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncResp.Unmarshal(m, b)
}
func (m *SyncResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncResp.Marshal(b, m, deterministic)
}
func (m *SyncResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncResp.Merge(m, src)
}
func (m *SyncResp) XXX_Size() int {
	return xxx_messageInfo_SyncResp.Size(m)
}
func (m *SyncResp) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncResp.DiscardUnknown(m)
}

var xxx_messageInfo_SyncResp proto.InternalMessageInfo

func (m *SyncResp) GetMessages() []byte {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *SyncResp) GetHasMore() bool {
	if m != nil {
		return m.HasMore
	}
	return false
}

type OfflineReq struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	DeviceId             int64    `protobuf:"varint,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	ClientAddr           string   `protobuf:"bytes,3,opt,name=client_addr,json=clientAddr,proto3" json:"client_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfflineReq) Reset()         { *m = OfflineReq{} }
func (m *OfflineReq) String() string { return proto.CompactTextString(m) }
func (*OfflineReq) ProtoMessage()    {}
func (*OfflineReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{6}
}

func (m *OfflineReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfflineReq.Unmarshal(m, b)
}
func (m *OfflineReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfflineReq.Marshal(b, m, deterministic)
}
func (m *OfflineReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfflineReq.Merge(m, src)
}
func (m *OfflineReq) XXX_Size() int {
	return xxx_messageInfo_OfflineReq.Size(m)
}
func (m *OfflineReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OfflineReq.DiscardUnknown(m)
}

var xxx_messageInfo_OfflineReq proto.InternalMessageInfo

func (m *OfflineReq) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *OfflineReq) GetDeviceId() int64 {
	if m != nil {
		return m.DeviceId
	}
	return 0
}

func (m *OfflineReq) GetClientAddr() string {
	if m != nil {
		return m.ClientAddr
	}
	return ""
}

type OfflineResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfflineResp) Reset()         { *m = OfflineResp{} }
func (m *OfflineResp) String() string { return proto.CompactTextString(m) }
func (*OfflineResp) ProtoMessage()    {}
func (*OfflineResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{7}
}

func (m *OfflineResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfflineResp.Unmarshal(m, b)
}
func (m *OfflineResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfflineResp.Marshal(b, m, deterministic)
}
func (m *OfflineResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfflineResp.Merge(m, src)
}
func (m *OfflineResp) XXX_Size() int {
	return xxx_messageInfo_OfflineResp.Size(m)
}
func (m *OfflineResp) XXX_DiscardUnknown() {
	xxx_messageInfo_OfflineResp.DiscardUnknown(m)
}

var xxx_messageInfo_OfflineResp proto.InternalMessageInfo

type ServerStopReq struct {
	ConnAddr             string   `protobuf:"bytes,1,opt,name=conn_addr,json=connAddr,proto3" json:"conn_addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStopReq) Reset()         { *m = ServerStopReq{} }
func (m *ServerStopReq) String() string { return proto.CompactTextString(m) }
func (*ServerStopReq) ProtoMessage()    {}
func (*ServerStopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{8}
}

func (m *ServerStopReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStopReq.Unmarshal(m, b)
}
func (m *ServerStopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStopReq.Marshal(b, m, deterministic)
}
func (m *ServerStopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStopReq.Merge(m, src)
}
func (m *ServerStopReq) XXX_Size() int {
	return xxx_messageInfo_ServerStopReq.Size(m)
}
func (m *ServerStopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStopReq.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStopReq proto.InternalMessageInfo

func (m *ServerStopReq) GetConnAddr() string {
	if m != nil {
		return m.ConnAddr
	}
	return ""
}

type ServerStopResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStopResp) Reset()         { *m = ServerStopResp{} }
func (m *ServerStopResp) String() string { return proto.CompactTextString(m) }
func (*ServerStopResp) ProtoMessage()    {}
func (*ServerStopResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_aa14331f3fd0015e, []int{9}
}

func (m *ServerStopResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStopResp.Unmarshal(m, b)
}
func (m *ServerStopResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStopResp.Marshal(b, m, deterministic)
}
func (m *ServerStopResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStopResp.Merge(m, src)
}
func (m *ServerStopResp) XXX_Size() int {
	return xxx_messageInfo_ServerStopResp.Size(m)
}
func (m *ServerStopResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStopResp.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStopResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ConnSignInReq)(nil), "pb.ConnSignInReq")
	proto.RegisterType((*ConnSignInResp)(nil), "pb.ConnSignInResp")
	proto.RegisterType((*MessageACKReq)(nil), "pb.MessageACKReq")
	proto.RegisterType((*MessageACKResp)(nil), "pb.MessageACKResp")
	proto.RegisterType((*SyncReq)(nil), "pb.SyncReq")
	proto.RegisterType((*SyncResp)(nil), "pb.SyncResp")
	proto.RegisterType((*OfflineReq)(nil), "pb.OfflineReq")
	proto.RegisterType((*OfflineResp)(nil), "pb.OfflineResp")
	proto.RegisterType((*ServerStopReq)(nil), "pb.ServerStopReq")
	proto.RegisterType((*ServerStopResp)(nil), "pb.ServerStopResp")
}

func init() { proto.RegisterFile("logic.int.proto", fileDescriptor_aa14331f3fd0015e) }

var fileDescriptor_aa14331f3fd0015e = []byte{
	// 463 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xc1, 0x6a, 0xdb, 0x40,
	0x10, 0x45, 0xb6, 0x89, 0x95, 0x91, 0xed, 0xb8, 0x7b, 0xa9, 0xab, 0x52, 0x9a, 0xe8, 0x14, 0x4a,
	0x51, 0xa1, 0xf9, 0x02, 0x37, 0x50, 0x30, 0xad, 0x69, 0x2b, 0xf5, 0x6e, 0x64, 0xed, 0xc4, 0x5e,
	0x62, 0xaf, 0x36, 0x3b, 0xb2, 0xa9, 0xbf, 0xa0, 0xdf, 0xd2, 0xbf, 0x2c, 0xab, 0x5d, 0x22, 0x6d,
	0x2e, 0x81, 0xdc, 0x76, 0x66, 0x9e, 0xe6, 0x3d, 0xe6, 0x3d, 0xc1, 0xc5, 0xae, 0xda, 0x88, 0x32,
	0x15, 0xb2, 0x4e, 0x95, 0xae, 0xea, 0x8a, 0xf5, 0xd4, 0x3a, 0x9e, 0xa8, 0x03, 0x6d, 0x53, 0xfc,
	0xe3, 0x7a, 0x49, 0x01, 0xe3, 0xdb, 0x4a, 0xca, 0x5c, 0x6c, 0xe4, 0x42, 0x66, 0xf8, 0xc0, 0x18,
	0x0c, 0xbe, 0x54, 0xfc, 0x34, 0x0b, 0x2e, 0x83, 0xeb, 0x51, 0xd6, 0xbc, 0xd9, 0x5b, 0x38, 0x2f,
	0x2b, 0x29, 0x57, 0x05, 0xe7, 0x7a, 0xd6, 0xbb, 0x0c, 0xae, 0xcf, 0xb3, 0xd0, 0x34, 0xe6, 0x9c,
	0x6b, 0xf6, 0x1e, 0xa2, 0x72, 0x27, 0x50, 0xd6, 0x76, 0xdc, 0x6f, 0xc6, 0x60, 0x5b, 0x06, 0x90,
	0x7c, 0x85, 0x49, 0x97, 0x82, 0x94, 0xd9, 0xc7, 0xf1, 0x28, 0x4a, 0x5c, 0x09, 0xde, 0x10, 0xf5,
	0xb3, 0xd0, 0x36, 0x16, 0x9c, 0xbd, 0x86, 0xe1, 0x81, 0x50, 0x9b, 0x51, 0xaf, 0x19, 0x9d, 0x99,
	0x72, 0xc1, 0x93, 0xbf, 0x01, 0x8c, 0x97, 0x48, 0x54, 0x6c, 0x70, 0x7e, 0xfb, 0xcd, 0x68, 0xed,
	0x40, 0x83, 0x2e, 0xd4, 0x27, 0xe8, 0x3d, 0x21, 0x78, 0x07, 0xe0, 0x86, 0x45, 0x79, 0xdf, 0xe8,
	0xed, 0x67, 0x0e, 0x3e, 0x2f, 0xef, 0xd9, 0x15, 0x8c, 0x34, 0x96, 0x28, 0x8e, 0xb8, 0xaa, 0xc5,
	0x1e, 0x67, 0x83, 0x06, 0x10, 0xb9, 0xde, 0x6f, 0xb1, 0xc7, 0x64, 0x0a, 0x93, 0xae, 0x10, 0x52,
	0xc9, 0x2f, 0x18, 0xe6, 0x27, 0x59, 0xbe, 0x5c, 0xd4, 0x14, 0xfa, 0x84, 0x0f, 0x4e, 0x8d, 0x79,
	0x26, 0x73, 0x08, 0xed, 0x4a, 0x52, 0x2c, 0x86, 0x70, 0x6f, 0x09, 0xc9, 0x19, 0xf3, 0x58, 0xb3,
	0x37, 0x10, 0x6e, 0x0b, 0x5a, 0xed, 0x2b, 0x8d, 0xcd, 0xd6, 0x30, 0x1b, 0x6e, 0x0b, 0x5a, 0x56,
	0x1a, 0x93, 0x12, 0xe0, 0xc7, 0xdd, 0xdd, 0x4e, 0x48, 0x7c, 0xb9, 0xb0, 0x67, 0xed, 0x1d, 0x43,
	0xf4, 0x48, 0x42, 0x2a, 0xf9, 0x08, 0xe3, 0x1c, 0xf5, 0x11, 0x75, 0x5e, 0x57, 0xca, 0xd0, 0x7a,
	0xe1, 0x09, 0xfc, 0xf0, 0x98, 0x4b, 0x76, 0xd1, 0xa4, 0x3e, 0xff, 0xeb, 0x41, 0xf8, 0xdd, 0x04,
	0x77, 0x21, 0x6b, 0x76, 0x03, 0xd0, 0x46, 0x87, 0xbd, 0x4a, 0xd5, 0x3a, 0xf5, 0xd2, 0x1a, 0xb3,
	0xa7, 0x2d, 0x52, 0xec, 0x13, 0x44, 0x39, 0x4a, 0xee, 0x1c, 0x62, 0x13, 0x03, 0xf9, 0x79, 0xa0,
	0xed, 0x92, 0x36, 0xe6, 0x93, 0xa9, 0x57, 0xab, 0xdd, 0xc9, 0xb0, 0xb4, 0x76, 0x5a, 0x16, 0x2f,
	0x67, 0x96, 0xc5, 0x77, 0x9c, 0x5d, 0xc1, 0xc0, 0xd8, 0xc3, 0x22, 0x33, 0x73, 0xde, 0xc7, 0xa3,
	0xb6, 0x20, 0xc5, 0x3e, 0xc0, 0xd0, 0x5d, 0xc6, 0x8a, 0x68, 0xbd, 0x88, 0x2f, 0xbc, 0x9a, 0x94,
	0xd1, 0xd0, 0x1e, 0xc2, 0x6a, 0xf0, 0xce, 0x68, 0x35, 0xf8, 0xb7, 0x5a, 0x9f, 0x35, 0xff, 0xf0,
	0xcd, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xc3, 0x6e, 0x23, 0xea, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogicIntClient is the client API for LogicInt service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogicIntClient interface {
	// 登录
	ConnSignIn(ctx context.Context, in *ConnSignInReq, opts ...grpc.CallOption) (*ConnSignInResp, error)
	// 发送消息
	SendMessage(ctx context.Context, in *PushMsgReq, opts ...grpc.CallOption) (*PushMsgReply, error)
	// 设备收到消息回执
	MessageACK(ctx context.Context, in *MessageACKReq, opts ...grpc.CallOption) (*MessageACKResp, error)
	// 同步历史聊天记录
	Sync(ctx context.Context, in *SyncReq, opts ...grpc.CallOption) (*SyncResp, error)
	// 设备离线
	Offline(ctx context.Context, in *OfflineReq, opts ...grpc.CallOption) (*OfflineResp, error)
	// 服务停止
	ServerStop(ctx context.Context, in *ServerStopReq, opts ...grpc.CallOption) (*ServerStopResp, error)
}

type logicIntClient struct {
	cc *grpc.ClientConn
}

func NewLogicIntClient(cc *grpc.ClientConn) LogicIntClient {
	return &logicIntClient{cc}
}

func (c *logicIntClient) ConnSignIn(ctx context.Context, in *ConnSignInReq, opts ...grpc.CallOption) (*ConnSignInResp, error) {
	out := new(ConnSignInResp)
	err := c.cc.Invoke(ctx, "/pb.LogicInt/ConnSignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicIntClient) SendMessage(ctx context.Context, in *PushMsgReq, opts ...grpc.CallOption) (*PushMsgReply, error) {
	out := new(PushMsgReply)
	err := c.cc.Invoke(ctx, "/pb.LogicInt/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicIntClient) MessageACK(ctx context.Context, in *MessageACKReq, opts ...grpc.CallOption) (*MessageACKResp, error) {
	out := new(MessageACKResp)
	err := c.cc.Invoke(ctx, "/pb.LogicInt/MessageACK", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicIntClient) Sync(ctx context.Context, in *SyncReq, opts ...grpc.CallOption) (*SyncResp, error) {
	out := new(SyncResp)
	err := c.cc.Invoke(ctx, "/pb.LogicInt/Sync", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicIntClient) Offline(ctx context.Context, in *OfflineReq, opts ...grpc.CallOption) (*OfflineResp, error) {
	out := new(OfflineResp)
	err := c.cc.Invoke(ctx, "/pb.LogicInt/Offline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *logicIntClient) ServerStop(ctx context.Context, in *ServerStopReq, opts ...grpc.CallOption) (*ServerStopResp, error) {
	out := new(ServerStopResp)
	err := c.cc.Invoke(ctx, "/pb.LogicInt/ServerStop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogicIntServer is the server API for LogicInt service.
type LogicIntServer interface {
	// 登录
	ConnSignIn(context.Context, *ConnSignInReq) (*ConnSignInResp, error)
	// 发送消息
	SendMessage(context.Context, *PushMsgReq) (*PushMsgReply, error)
	// 设备收到消息回执
	MessageACK(context.Context, *MessageACKReq) (*MessageACKResp, error)
	// 同步历史聊天记录
	Sync(context.Context, *SyncReq) (*SyncResp, error)
	// 设备离线
	Offline(context.Context, *OfflineReq) (*OfflineResp, error)
	// 服务停止
	ServerStop(context.Context, *ServerStopReq) (*ServerStopResp, error)
}

// UnimplementedLogicIntServer can be embedded to have forward compatible implementations.
type UnimplementedLogicIntServer struct {
}

func (*UnimplementedLogicIntServer) ConnSignIn(ctx context.Context, req *ConnSignInReq) (*ConnSignInResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ConnSignIn not implemented")
}
func (*UnimplementedLogicIntServer) SendMessage(ctx context.Context, req *PushMsgReq) (*PushMsgReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedLogicIntServer) MessageACK(ctx context.Context, req *MessageACKReq) (*MessageACKResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MessageACK not implemented")
}
func (*UnimplementedLogicIntServer) Sync(ctx context.Context, req *SyncReq) (*SyncResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sync not implemented")
}
func (*UnimplementedLogicIntServer) Offline(ctx context.Context, req *OfflineReq) (*OfflineResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Offline not implemented")
}
func (*UnimplementedLogicIntServer) ServerStop(ctx context.Context, req *ServerStopReq) (*ServerStopResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServerStop not implemented")
}

func RegisterLogicIntServer(s *grpc.Server, srv LogicIntServer) {
	s.RegisterService(&_LogicInt_serviceDesc, srv)
}

func _LogicInt_ConnSignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ConnSignInReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicIntServer).ConnSignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LogicInt/ConnSignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicIntServer).ConnSignIn(ctx, req.(*ConnSignInReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicInt_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicIntServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LogicInt/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicIntServer).SendMessage(ctx, req.(*PushMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicInt_MessageACK_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageACKReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicIntServer).MessageACK(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LogicInt/MessageACK",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicIntServer).MessageACK(ctx, req.(*MessageACKReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicInt_Sync_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SyncReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicIntServer).Sync(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LogicInt/Sync",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicIntServer).Sync(ctx, req.(*SyncReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicInt_Offline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfflineReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicIntServer).Offline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LogicInt/Offline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicIntServer).Offline(ctx, req.(*OfflineReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _LogicInt_ServerStop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerStopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogicIntServer).ServerStop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.LogicInt/ServerStop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogicIntServer).ServerStop(ctx, req.(*ServerStopReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogicInt_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.LogicInt",
	HandlerType: (*LogicIntServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ConnSignIn",
			Handler:    _LogicInt_ConnSignIn_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _LogicInt_SendMessage_Handler,
		},
		{
			MethodName: "MessageACK",
			Handler:    _LogicInt_MessageACK_Handler,
		},
		{
			MethodName: "Sync",
			Handler:    _LogicInt_Sync_Handler,
		},
		{
			MethodName: "Offline",
			Handler:    _LogicInt_Offline_Handler,
		},
		{
			MethodName: "ServerStop",
			Handler:    _LogicInt_ServerStop_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "logic.int.proto",
}
